[2025-03-20T23:58:40.326+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-03-20T23:58:40.360+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ETL_breweries_list.load_view_into_postgres manual__2025-03-20T23:57:23.534232+00:00 [queued]>
[2025-03-20T23:58:40.371+0000] {taskinstance.py:2614} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ETL_breweries_list.load_view_into_postgres manual__2025-03-20T23:57:23.534232+00:00 [queued]>
[2025-03-20T23:58:40.371+0000] {taskinstance.py:2867} INFO - Starting attempt 1 of 2
[2025-03-20T23:58:40.797+0000] {taskinstance.py:2890} INFO - Executing <Task(PythonOperator): load_view_into_postgres> on 2025-03-20 23:57:23.534232+00:00
[2025-03-20T23:58:40.862+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=1980) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-03-20T23:58:40.864+0000] {standard_task_runner.py:72} INFO - Started process 1982 to run task
[2025-03-20T23:58:40.879+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'ETL_breweries_list', 'load_view_into_postgres', 'manual__2025-03-20T23:57:23.534232+00:00', '--job-id', '290', '--raw', '--subdir', 'DAGS_FOLDER/breweries_list_etl.py', '--cfg-path', '/tmp/tmps3bnc4o8']
[2025-03-20T23:58:40.880+0000] {standard_task_runner.py:105} INFO - Job 290: Subtask load_view_into_postgres
[2025-03-20T23:58:41.873+0000] {task_command.py:467} INFO - Running <TaskInstance: ETL_breweries_list.load_view_into_postgres manual__2025-03-20T23:57:23.534232+00:00 [running]> on host 5414e2764892
[2025-03-20T23:58:47.543+0000] {taskinstance.py:3134} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='ETL_breweries_list' AIRFLOW_CTX_TASK_ID='load_view_into_postgres' AIRFLOW_CTX_EXECUTION_DATE='2025-03-20T23:57:23.534232+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-20T23:57:23.534232+00:00'
[2025-03-20T23:58:47.544+0000] {logging_mixin.py:190} INFO - Task instance is in running state
[2025-03-20T23:58:47.545+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: queued
[2025-03-20T23:58:47.545+0000] {logging_mixin.py:190} INFO - Current task name:load_view_into_postgres state:running start_date:2025-03-20 23:58:40.360675+00:00
[2025-03-20T23:58:47.546+0000] {logging_mixin.py:190} INFO - Dag name:ETL_breweries_list and current dag run status:running
[2025-03-20T23:58:47.547+0000] {taskinstance.py:732} INFO - ::endgroup::
[2025-03-20T23:58:56.300+0000] {base.py:84} INFO - Retrieving connection 'brewery_connection'
[2025-03-20T23:58:56.301+0000] {sql.py:186} WARNING - This setter is for backward compatibility and should not be used.
Since the introduction of connection property, the providers listed below breaks due to assigning value to self.connection in their __init__ method.
* apache-***-providers-mysql<5.7.1
* apache-***-providers-elasticsearch<5.5.1
* apache-***-providers-postgres<5.13.0
[2025-03-20T23:58:56.309+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('IRELAND', 'LAOIS', 'MICRO', 1)
[2025-03-20T23:58:56.339+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.442+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'ARIZONA', 'MICRO', 3)
[2025-03-20T23:58:56.444+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.496+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'CALIFORNIA', 'CLOSED', 1)
[2025-03-20T23:58:56.506+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.531+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'CALIFORNIA', 'LARGE', 1)
[2025-03-20T23:58:56.533+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.550+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'CALIFORNIA', 'MICRO', 2)
[2025-03-20T23:58:56.554+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.575+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'COLORADO', 'BREWPUB', 1)
[2025-03-20T23:58:56.577+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.640+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'COLORADO', 'LARGE', 1)
[2025-03-20T23:58:56.642+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.650+0000] {job.py:229} INFO - Heartbeat recovered after 17.36 seconds
[2025-03-20T23:58:56.690+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'COLORADO', 'MICRO', 1)
[2025-03-20T23:58:56.699+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.752+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'COLORADO', 'PROPRIETOR', 1)
[2025-03-20T23:58:56.754+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.769+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'DELAWARE', 'MICRO', 1)
[2025-03-20T23:58:56.772+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.789+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'IDAHO', 'LARGE', 1)
[2025-03-20T23:58:56.792+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.867+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'ILLINOIS', 'MICRO', 1)
[2025-03-20T23:58:56.869+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.925+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'INDIANA', 'MICRO', 3)
[2025-03-20T23:58:56.927+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:56.961+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'IOWA', 'MICRO', 1)
[2025-03-20T23:58:56.962+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.025+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'MARYLAND', 'CONTRACT', 1)
[2025-03-20T23:58:57.028+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.090+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'MASSACHUSETTS', 'MICRO', 1)
[2025-03-20T23:58:57.108+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.150+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'MICHIGAN', 'MICRO', 1)
[2025-03-20T23:58:57.152+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.194+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'MINNESOTA', 'MICRO', 3)
[2025-03-20T23:58:57.203+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.224+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'MISSISSIPPI', 'MICRO', 1)
[2025-03-20T23:58:57.232+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.256+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'NEVADA', 'MICRO', 1)
[2025-03-20T23:58:57.265+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.294+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'NEW YORK', 'BREWPUB', 2)
[2025-03-20T23:58:57.297+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.333+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'NORTH CAROLINA', 'BREWPUB', 1)
[2025-03-20T23:58:57.348+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.366+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'NORTH CAROLINA', 'MICRO', 1)
[2025-03-20T23:58:57.381+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.428+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'OHIO', 'BREWPUB', 1)
[2025-03-20T23:58:57.445+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.473+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'OHIO', 'MICRO', 1)
[2025-03-20T23:58:57.476+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.527+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'OKLAHOMA', 'MICRO', 1)
[2025-03-20T23:58:57.529+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.598+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'OREGON', 'BREWPUB', 2)
[2025-03-20T23:58:57.613+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.763+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'OREGON', 'LARGE', 4)
[2025-03-20T23:58:57.765+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.854+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'PENNSYLVANIA', 'MICRO', 1)
[2025-03-20T23:58:57.864+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.921+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'SOUTH CAROLINA', 'BREWPUB', 1)
[2025-03-20T23:58:57.923+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.966+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'TEXAS', 'MICRO', 2)
[2025-03-20T23:58:57.983+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:57.999+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'VERMONT', 'MICRO', 1)
[2025-03-20T23:58:58.019+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:58.035+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'VIRGINIA', 'MICRO', 1)
[2025-03-20T23:58:58.040+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:58.058+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'WASHINGTON', 'CLOSED', 1)
[2025-03-20T23:58:58.066+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:58.085+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'WASHINGTON', 'MICRO', 1)
[2025-03-20T23:58:58.087+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:58.115+0000] {sql.py:511} INFO - Running statement: 
        INSERT INTO brewery_type_per_location (country, state, brewery_type, brewery_count)
        VALUES (%s, %s, %s, %s)
        ON CONFLICT (country, state, brewery_type) DO UPDATE
        SET brewery_count = EXCLUDED.brewery_count;
        , parameters: ('UNITED STATES', 'WISCONSIN', 'MICRO', 2)
[2025-03-20T23:58:58.122+0000] {sql.py:520} INFO - Rows affected: 1
[2025-03-20T23:58:58.127+0000] {breweries_list_etl.py:237} INFO - Aggregated data successfully inserted into PostgreSQL
[2025-03-20T23:58:58.128+0000] {python.py:240} INFO - Done. Returned value was: None
[2025-03-20T23:58:58.153+0000] {taskinstance.py:341} INFO - ::group::Post task execution logs
[2025-03-20T23:58:58.155+0000] {taskinstance.py:353} INFO - Marking task as SUCCESS. dag_id=ETL_breweries_list, task_id=load_view_into_postgres, run_id=manual__2025-03-20T23:57:23.534232+00:00, execution_date=20250320T235723, start_date=20250320T235840, end_date=20250320T235858
[2025-03-20T23:58:58.220+0000] {logging_mixin.py:190} INFO - Task instance in success state
[2025-03-20T23:58:58.221+0000] {logging_mixin.py:190} INFO -  Previous state of the Task instance: running
[2025-03-20T23:58:58.222+0000] {logging_mixin.py:190} INFO - Dag name:ETL_breweries_list queued_at:2025-03-20 23:57:24.037604+00:00
[2025-03-20T23:58:58.222+0000] {logging_mixin.py:190} INFO - Task hostname:5414e2764892 operator:PythonOperator
[2025-03-20T23:58:58.285+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-03-20T23:58:58.352+0000] {taskinstance.py:3901} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-03-20T23:58:58.372+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
